FORMAT: 1A
HOST: http://uni.olemeyer.com:8082

# Optimized Feature Selection

This project was created as part of the lecture "Selbstorganisierende und adaptive Systeme"
at the University of Duisburg-Essen. It's provides a service for findung an
optimized configuration for a feature tree using the 
[regulatory algorithm](http://link.springer.com/article/10.1007/s00500-015-1624-6).

You need to send your feature tree including some information about the impact
between features and softgoals. Furthermore, you can configure the algorithm
(e.g. the probability for a mutation or the quota of reproduction).


## Using the API [/optimize]

### Optimize Request [POST]

Just click and play around.

+ Request (application/json)

{
  "populationSize":250,
  "rgMutationProbability":0.05,
  "sgMutationProbability":0.05,
  "reproductionQuota":0.5,
  "maxIterations":100000,
  "minAttractorLength":10000,
  "featureModel":{
    "id":"example_model",
    "rootFeature":{
      "id":"root",
      "active":true,
      "featureGroups":[
        {
          "min":1,
          "max":1,
          "features":[
            {
              "id":"1",
              "active":true,
              "featureGroups":[
                {
                  "min":1,
                  "max":1,
                  "features":[
                    {
                      "id":"1.1",
                      "active":true,
                      "featureGroups":[
                        {
                          "min":0,
                          "max":2,
                          "features":[
                            {
                              "id":"1.1.1"
                            },
                            {
                              "id":"1.1.2"
                            },
                            {
                              "id":"1.1.3"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id":"1.2"
                    }
                  ]
                },
                {
                  "min":1,
                  "max":1,
                  "features":[
                    {
                      "id":"1.3",
                      "active":true,
                      "featureGroups":[
                        {
                          "min":1,
                          "max":2,
                          "features":[
                            {
                              "id":"1.3.1"
                            },
                            {
                              "id":"1.3.2",
                              "active":true
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "min":0,
          "max":1,
          "features":[
            {
              "id":"2",
              "featureGroups":[
                {
                  "min":1,
                  "max":1,
                  "features":[
                    {
                      "id":"2.1"
                    }
                  ]
                },
                {
                  "min":0,
                  "max":1,
                  "features":[
                    {
                      "id":"2.2",
                      "featureGroups":[
                        {
                          "min":1,
                          "max":1,
                          "features":[
                            {
                              "id":"2.2.1"
                            }
                          ]
                        },
                        {
                          "min":0,
                          "max":1,
                          "features":[
                            {
                              "id":"2.2.2",
                              "featureGroups":[
                                {
                                  "min":1,
                                  "max":2,
                                  "features":[
                                    {
                                      "id":"2.2.1.1"
                                    },
                                    {
                                      "id":"2.2.1.2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    "requires":[
      {
        "fromId":"1.1.2",
        "toId":"1.3.1"
      },
      {
        "fromId":"2.2.1.1",
        "toId":"2.1"
      }
    ],
    "excludes":[
      {
        "fromId":"1.3.1",
        "toId":"2.2.1.2"
      }
    ],
    "softgoals":[
      {
        "id":"Softgoal 1",
        "weight":0.7,
        "influences":[
          {
            "featureId":"1.1.1",
            "weight":1
          },
          {
            "featureId":"1.1.2",
            "weight":2
          },
          {
            "featureId":"1.1.3",
            "weight":-1
          },
          {
            "featureId":"1.1.1",
            "weight":-0.5
          },
          {
            "featureId":"2.2.1.1",
            "weight":-0.5
          },
          {
            "featureId":"2.2.1.2",
            "weight":2
          }
        ]
      },
      {
        "id":"Softgoal 2",
        "weight":0.3,
        "influences":[
          {
            "featureId":"1.1.2",
            "weight":0.5
          },
          {
            "featureId":"1.3.2",
            "weight":2
          },
          {
            "featureId":"2.2.1",
            "weight":-0.5
          },
          {
            "featureId":"2.2.1.1",
            "weight":1
          }
        ]
      }
    ]
  }
}
    
+ Response 201 (application/json)

    + Headers

            Location: /optimize

    + Body

            {
  "configuration": [
    "1",
    "1.1",
    "1.1.2",
    "1.3",
    "1.3.1",
    "1.3.2"
  ],
  "fitnessScore": 2.15,
  "executionTime": 834,
  "attractorReached": true,
  "iterations": 10154,
  "evolution": [
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.6,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    0.95,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    1.85,
    2.15,
    2.15,
    2.15,
    2.15,
    2.15
  ]
}